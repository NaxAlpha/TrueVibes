name: Build TrueVibes

on:
  push:
    # branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_idx: ${{ steps.set-build-info.outputs.build_idx }}
      build_date: ${{ steps.set-build-info.outputs.build_date }}
    steps:
      - name: Set Build Information
        id: set-build-info
        run: |
          echo "build_date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "build_idx=${{ github.run_number }}" >> $GITHUB_OUTPUT

  build-android:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.6.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Update build.gradle with version
        run: |
          VERSION_NAME="${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}"
          sed -i "s/versionName \"1.0.0\"/versionName \"$VERSION_NAME\"/" android/app/build.gradle
          sed -i "s/versionCode 1/versionCode ${{ github.run_number }}/" android/app/build.gradle
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: truevibes-android-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          path: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.6.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Install CocoaPods
        run: |
          gem install cocoapods
          cd ios && pod install
      
      - name: Update Info.plist with version
        run: |
          VERSION_NAME="${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}"
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION_NAME" ios/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_number }}" ios/Runner/Info.plist
      
      - name: Build iOS
        run: flutter build ios --release --no-codesign --no-tree-shake-icons
      
      - name: Create IPA directory
        run: mkdir -p build/ios/ipa
      
      - name: Create Payload directory
        run: mkdir -p build/ios/ipa/Payload
      
      - name: Copy .app to Payload directory
        run: cp -r build/ios/iphoneos/Runner.app build/ios/ipa/Payload
      
      - name: Create IPA
        run: cd build/ios/ipa && zip -r truevibes-ios.ipa Payload
      
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: truevibes-ios-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          path: build/ios/ipa/truevibes-ios.ipa

  build-macos:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.6.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Install CocoaPods
        run: |
          gem install cocoapods
          cd macos && pod install
      
      - name: Update Info.plist with version
        run: |
          VERSION_NAME="${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}"
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION_NAME" macos/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_number }}" macos/Runner/Info.plist
      
      - name: Enable macOS
        run: flutter config --enable-macos-desktop
      
      - name: Build macOS
        run: flutter build macos --release
      
      - name: Create DMG
        run: |
          cd build/macos/Build/Products/Release
          mkdir -p TrueVibes
          cp -r truevibes.app TrueVibes/
          hdiutil create -volname "TrueVibes" -srcfolder TrueVibes -ov -format UDZO truevibes-macos.dmg
      
      - name: Upload DMG
        uses: actions/upload-artifact@v3
        with:
          name: truevibes-macos-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          path: build/macos/Build/Products/Release/truevibes-macos.dmg

  build-windows:
    needs: setup
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.6.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Update Runner.rc with version
        shell: pwsh
        run: |
          $VERSION_NAME="${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}"
          (Get-Content windows/runner/Runner.rc) -replace 'VERSION_AS_STRING "1.0.0"', "VERSION_AS_STRING `"$VERSION_NAME`"" | Set-Content windows/runner/Runner.rc
          (Get-Content windows/runner/Runner.rc) -replace 'VERSION_AS_NUMBER 1,0,0', "VERSION_AS_NUMBER ${{ github.run_number }},0,0" | Set-Content windows/runner/Runner.rc
      
      - name: Enable Windows
        run: flutter config --enable-windows-desktop
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Create ZIP
        shell: pwsh
        run: |
          Compress-Archive -Path build\windows\runner\Release\* -DestinationPath truevibes-windows.zip
      
      - name: Upload ZIP
        uses: actions/upload-artifact@v3
        with:
          name: truevibes-windows-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          path: truevibes-windows.zip

  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libblkid-dev libsecret-1-dev libjsoncpp-dev libssl-dev
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.6.0'
          channel: 'stable'
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Update CMakeLists.txt with version
        run: |
          VERSION_NAME="${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}"
          if grep -q "set(APPLICATION_VERSION" linux/CMakeLists.txt; then
            sed -i "s/set(APPLICATION_VERSION \"1.0.0\")/set(APPLICATION_VERSION \"$VERSION_NAME\")/" linux/CMakeLists.txt
          fi
      
      - name: Enable Linux
        run: flutter config --enable-linux-desktop
      
      - name: Build Linux
        run: flutter build linux --release
      
      - name: Create tarball
        run: |
          cd build/linux/x64/release
          tar -czvf truevibes-linux.tar.gz bundle
      
      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: truevibes-linux-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          path: build/linux/x64/release/truevibes-linux.tar.gz

  create-release:
    needs: [setup, build-android, build-ios, build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          release_name: Release ${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}
          draft: false
          prerelease: false
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: List artifacts
        run: ls -la

      - name: Find artifacts
        id: find-artifacts
        run: |
          echo "android_path=$(find truevibes-android-* -name "*.apk" | head -n 1)" >> $GITHUB_OUTPUT
          echo "ios_path=$(find truevibes-ios-* -name "*.ipa" | head -n 1)" >> $GITHUB_OUTPUT
          echo "macos_path=$(find truevibes-macos-* -name "*.dmg" | head -n 1)" >> $GITHUB_OUTPUT
          echo "windows_path=$(find truevibes-windows-* -name "*.zip" | head -n 1)" >> $GITHUB_OUTPUT
          echo "linux_path=$(find truevibes-linux-* -name "*.tar.gz" | head -n 1)" >> $GITHUB_OUTPUT
      
      - name: Upload Android Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-artifacts.outputs.android_path }}
          asset_name: truevibes-android-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}.apk
          asset_content_type: application/vnd.android.package-archive
      
      - name: Upload iOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-artifacts.outputs.ios_path }}
          asset_name: truevibes-ios-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}.ipa
          asset_content_type: application/octet-stream
      
      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-artifacts.outputs.macos_path }}
          asset_name: truevibes-macos-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}.dmg
          asset_content_type: application/x-apple-diskimage
      
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-artifacts.outputs.windows_path }}
          asset_name: truevibes-windows-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}.zip
          asset_content_type: application/zip
      
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-artifacts.outputs.linux_path }}
          asset_name: truevibes-linux-${{ needs.setup.outputs.build_date }}.${{ needs.setup.outputs.build_idx }}.tar.gz
          asset_content_type: application/gzip
